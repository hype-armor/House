//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EchoClient.EchoWCFService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Microsoft.Samples.GettingStarted", ConfigurationName="EchoWCFService.Echo")]
    public interface Echo {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.Samples.GettingStarted/Echo/Post", ReplyAction="http://Microsoft.Samples.GettingStarted/Echo/PostResponse")]
        System.DateTime Post(int ClientID, System.IO.MemoryStream audioStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.Samples.GettingStarted/Echo/Post", ReplyAction="http://Microsoft.Samples.GettingStarted/Echo/PostResponse")]
        System.Threading.Tasks.Task<System.DateTime> PostAsync(int ClientID, System.IO.MemoryStream audioStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.Samples.GettingStarted/Echo/Get", ReplyAction="http://Microsoft.Samples.GettingStarted/Echo/GetResponse")]
        System.IO.MemoryStream Get(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.Samples.GettingStarted/Echo/Get", ReplyAction="http://Microsoft.Samples.GettingStarted/Echo/GetResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.Samples.GettingStarted/Echo/CreateProfile", ReplyAction="http://Microsoft.Samples.GettingStarted/Echo/CreateProfileResponse")]
        int CreateProfile(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.Samples.GettingStarted/Echo/CreateProfile", ReplyAction="http://Microsoft.Samples.GettingStarted/Echo/CreateProfileResponse")]
        System.Threading.Tasks.Task<int> CreateProfileAsync(string username, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EchoChannel : EchoWCFService.Echo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EchoClient : System.ServiceModel.ClientBase<EchoWCFService.Echo>, EchoWCFService.Echo {
        
        public EchoClient() {
        }
        
        public EchoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EchoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EchoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EchoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.DateTime Post(int ClientID, System.IO.MemoryStream audioStream) {
            return base.Channel.Post(ClientID, audioStream);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> PostAsync(int ClientID, System.IO.MemoryStream audioStream) {
            return base.Channel.PostAsync(ClientID, audioStream);
        }
        
        public System.IO.MemoryStream Get(int ClientID) {
            return base.Channel.Get(ClientID);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAsync(int ClientID) {
            return base.Channel.GetAsync(ClientID);
        }
        
        public int CreateProfile(string username, string password) {
            return base.Channel.CreateProfile(username, password);
        }
        
        public System.Threading.Tasks.Task<int> CreateProfileAsync(string username, string password) {
            return base.Channel.CreateProfileAsync(username, password);
        }
    }
}
